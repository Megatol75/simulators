{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 1,
  "iteration": 1658339398004,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 20,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 3,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 15,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [
            "last",
            "min",
            "max",
            "mean"
          ],
          "displayMode": "table",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "repeat": null,
      "targets": [
        {
          "query": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> filter(fn: (r) => r[\"area\"] == \"${area}\")\r\n  |> filter(fn: (r) => contains(value: r[\"generator\"], set: ${gens:json}))\r\n  |> filter(fn: (r) => contains(value: r[\"tag\"], set: ${tags:json}))\r\n  |> map(fn: (r) => ({ r with tag: r.generator + \"/\" + r.tag }))\r\n  |> keep(columns: [\"_time\", \"_value\",\"tag\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "${site} --> ${area} --> ${gens} --> ${tags}",
      "transformations": [],
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": "InfluxDB",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 13,
        "w": 12,
        "x": 0,
        "y": 15
      },
      "id": 3,
      "maxPerRow": 2,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "bottom",
          "values": [
            "percent",
            "value"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "multi"
        }
      },
      "repeat": "tags",
      "repeatDirection": "h",
      "targets": [
        {
          "query": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> filter(fn: (r) => r[\"area\"] == \"${area}\")\r\n  |> filter(fn: (r) => contains(value: r[\"generator\"], set: ${gens:json}))\r\n  |> filter(fn: (r) => r[\"tag\"] == \"${tags}\")\r\n  |> map(fn: (r) => ({ r with tag: r.generator + \"/\" + r.tag }))\r\n  |> keep(columns: [\"_time\", \"_value\",\"tag\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "${site} --> ${area} --> ${gens} --> ${tags}",
      "transformations": [],
      "transparent": true,
      "type": "piechart"
    }
  ],
  "schemaVersion": 31,
  "style": "dark",
  "tags": [
    "pgmqtt"
  ],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "Dallas Expressway Plant",
          "value": "Dallas Expressway Plant"
        },
        "datasource": "InfluxDB",
        "definition": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> keep(columns: [\"site\"])\r\n  |> group()\r\n  |> distinct(column: \"site\")\r\n\r\n",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Site",
        "multi": false,
        "name": "site",
        "options": [],
        "query": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> keep(columns: [\"site\"])\r\n  |> group()\r\n  |> distinct(column: \"site\")\r\n\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "CMOS Facility",
          "value": "CMOS Facility"
        },
        "datasource": "InfluxDB",
        "definition": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> keep(columns: [\"area\"])\r\n  |> group()\r\n  |> distinct(column: \"area\")",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": false,
        "label": "Area",
        "multi": false,
        "name": "area",
        "options": [],
        "query": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> keep(columns: [\"area\"])\r\n  |> group()\r\n  |> distinct(column: \"area\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": [
            "Generator_1",
            "Generator_3"
          ],
          "value": [
            "Generator_1",
            "Generator_3"
          ]
        },
        "datasource": "InfluxDB",
        "definition": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> filter(fn: (r) => r[\"area\"] == \"${area}\")\r\n  |> keep(columns: [\"generator\"])\r\n  |> group()\r\n  |> distinct(column: \"generator\")\r\n\r\n",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Generators",
        "multi": true,
        "name": "gens",
        "options": [],
        "query": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> filter(fn: (r) => r[\"area\"] == \"${area}\")\r\n  |> keep(columns: [\"generator\"])\r\n  |> group()\r\n  |> distinct(column: \"generator\")\r\n\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": [
            "Fuel",
            "FuelUsed"
          ],
          "value": [
            "Fuel",
            "FuelUsed"
          ]
        },
        "datasource": "InfluxDB",
        "definition": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> filter(fn: (r) => r[\"area\"] == \"${area}\")\r\n  |> filter(fn: (r) => contains(value: r[\"generator\"], set: ${gens:json}))\r\n  |> keep(columns: [\"tag\"])\r\n  |> group()\r\n  |> distinct(column: \"tag\")",
        "description": null,
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Tags",
        "multi": true,
        "name": "tags",
        "options": [],
        "query": "from(bucket: \"simulators\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"power-generators\")\r\n  |> filter(fn: (r) => r[\"site\"] == \"${site}\")\r\n  |> filter(fn: (r) => r[\"area\"] == \"${area}\")\r\n  |> filter(fn: (r) => contains(value: r[\"generator\"], set: ${gens:json}))\r\n  |> keep(columns: [\"tag\"])\r\n  |> group()\r\n  |> distinct(column: \"tag\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-1h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Power Generators Dashboard",
  "uid": "nHvFCAR4k",
  "version": 19
}